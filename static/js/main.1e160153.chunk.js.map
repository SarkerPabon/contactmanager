{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","components_contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e160153.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Contact.css';\r\n\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n\r\n    try {\r\n      await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch(e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\r\n                  className=\"fas fa-sort-down\"></i>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem' }}></i>\r\n                </Link>\r\n              </h4>\r\n\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from './Contact';\r\n\r\nimport {Consumer} from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}/>\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n            type={type}\r\n            name={name}\r\n            className={classnames('form-control form-control-lg', {\r\n                'is-invalid': error\r\n            })}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={onChange}/>\r\n        {error && <div className=\"invalid-feedback\">{error}</div> }\r\n    </div>\r\n    ) ;\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {Consumer} from '../../context';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass AddContact extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const {name, email, phone} = this.state;\r\n\r\n    // Check For Errors\r\n    if(name === '') {\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n\r\n    if(email === '') {\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n\r\n    if(phone === '') {\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post('http://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    // Clear State (Clear Input After Submit)\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Redirect\r\n    this.props.history.push('/');\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n\r\n          return(\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}/>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}/>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}/>\r\n\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {Consumer} from '../../context';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass EditContact extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n      const { id } = this.props.match.params;\r\n      const res = await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      const contact = res.data;\r\n\r\n      this.setState({\r\n          name: contact.name,\r\n          email: contact.email,\r\n          phone: contact.phone\r\n      });\r\n  }\r\n\r\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const {name, email, phone} = this.state;\r\n\r\n    // Check For Errors\r\n    if(name === '') {\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n\r\n    if(email === '') {\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n\r\n    if(phone === '') {\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n        name,\r\n        email,\r\n        phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n    // Clear State (Clear Input After Submit)\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // Redirect\r\n    this.props.history.push('/');\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n\r\n          return(\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}/>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}/>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}/>\r\n\r\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n    return(\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  }\r\n\r\n  // sencond most use life cycle hook (fetching data, ajax)\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      // .then(data => console.log(data))\r\n      .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n      }))\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log('componentWillMount...');\r\n  // }\r\n\r\n  // it's run when only component update\r\n  // componentDidUpdate() {\r\n  //   console.log('componentDidUpdate...');\r\n  // }\r\n\r\n  // componentWillUpdate() {\r\n  //   console.log('componentWillUpdate...');\r\n  // }\r\n\r\n  // when component will receive new properties, then this is run. It's usually used in Redux\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log('componentWillReceiveProps...');\r\n  // }\r\n\r\n  // add new life cycle (provably) and must return null or state\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   return {\r\n  //     test: 'something'\r\n  //   }\r\n  //   // return null;\r\n  // }\r\n\r\n  // add new life cycle (provably)\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log('getSnapshotBeforeUpdate...');\r\n  // }\r\n\r\n  render() {\r\n\r\n    const {title, body} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {Provider} from './context';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nclass App extends Component {\n  render() {\n\n    return(\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}